#!/home/yosida95/.virtualenvs/ircbot/bin/python
# -*- coding: utf-8 -*-

import argparse
import json
import os.path
import sys
import time
from datetime import timedelta
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from sqlalchemy import engine_from_config

from yosida95bot.models import (
    Base,
    Message,
    Session
)


def get_args():
    parser = argparse.ArgumentParser(description=u'yosida95bot')
    parser.add_argument(u'--channel', type=unicode, required=True)
    parser.add_argument(u'--localtime', default=False, action=u'store_true')
    parser.add_argument('--output', type=argparse.FileType('w'),
                        default=sys.stdout)

    return parser.parse_args()


def main():
    args = get_args()

    config_path = os.path.join(
        os.path.dirname(os.path.dirname(os.path.abspath(__file__))),
        u'config.json'
    )
    try:
        with open(config_path, u'r') as f:
            config = json.load(f)
    except BaseException as why:
        print repr(why)
        sys.exit(1)
    else:
        engine = engine_from_config(config[u'sqlalchemy'], prefix=u'')
        Base.metadata.create_all(engine)
        Session.configure(bind=engine)

        session = Session()
        query = session.query(Message).filter(
            Message.channel == args.channel
        ).order_by(
            Message.created_at
        )

        delta = timedelta(seconds=time.timezone)

        output = "\n".join("%s:%s:%s" % (
            (message.created_at - (delta if args.localtime
             else timedelta(seconds=0))).strftime(u'%Y-%m-%d %H:%M:%S'),
            message.user,
            message.message
        ) for message in query.all())

        args.output.write((output + u'\n').encode(u'utf-8'))

        session.commit()
        session.close()


if __name__ == u'__main__':
    main()
